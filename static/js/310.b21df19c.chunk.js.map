{"version":3,"file":"static/js/310.b21df19c.chunk.js","mappings":"iTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,qCAKHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAAA,IAAA,8BAAiCC,IAD7B,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAA2CO,IADzC,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXG,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAgCT,IAD1B,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,mLCzBfO,EAAgBC,EAAAA,GAAAA,KAAH,uDAIbC,EAAOD,EAAAA,GAAAA,KAAH,0FAMJE,EAAQF,EAAAA,GAAAA,MAAH,oMAWLG,EAASH,EAAAA,GAAAA,OAAH,qLAUNI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6e,SCqCrB,EA/De,WAAO,IAAD,EACnB,GAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAoB,OAAOR,EAAU,IAEzCE,GAAW,IACXjB,EAAAA,EAAAA,IAAYuB,GACTG,MAAK,SAAA5B,GACJiB,EAAUjB,EAAS6B,SACnBV,GAAW,EACZ,IACAW,MAAMC,QAAQC,IAClB,GAAE,CAACP,IAUJ,OACE,UAACjB,EAAD,YACE,UAACE,EAAD,CAAMuB,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMhC,EAAQ+B,EAAEE,cAAcC,SAASC,MAAMC,MACxB,KAAjBpC,EAAMqC,QAAeC,EAAAA,GAAAA,MAAY,qBACrCnB,EAAiC,KAAjBnB,EAAMqC,OAAgB,CAAErC,MAAAA,GAAU,CAAC,GACnD+B,EAAEE,cAAcM,OACjB,EAIG,WACE,SAAC/B,EAAD,CAAOgC,KAAK,OAAOC,KAAK,WACxB,SAAChC,EAAD,CAAQ+B,KAAK,SAAb,UAAsB,SAAC,MAAD,SAEvBzB,IAAW,SAAC2B,EAAA,EAAD,IACX7B,EAAO8B,OAAS,IACf,wBACG9B,EAAO+B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,yBACE,UAACrC,EAAD,CAAUsC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM9B,GAAtC,WACE,uBAAI0B,KACJ,gBACEK,IACEJ,EAAW,yCAC2BA,GAClC,6EAENK,IAAKN,EACLO,MAAO,UAVJR,EADC,MAkBG,IAAlBhC,EAAO8B,QAAgC,KAAhBrB,IACtB,gEACqC,0BAAOA,IAD5C,UAMP,C","sources":["api/moviesApi.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90a449e7773f96eeaad80a5e660b8095';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}?${params}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits?${params}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews?${params}`);\n  return response.data;\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesWrapper = styled.main`\n  padding: 12px 0 150px 12px;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  z-index: 2;\n  padding: 0  0 24px 16px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 28px;\n  border-radius: 4px;\n  border: 1px solid #2b405540;\n  outline: none;\n  :focus-visible {\n    box-shadow: #2b4055b0 0px 0px 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  left: 226px;\n  height: 28px;\n  color: #2b4055b0;\n  background-color: #ffffff00;\n  border-radius: 0 4px 4px 0;\n  border: none;\n`;\n\nexport const ListLink = styled(Link)`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  padding-right: 280px;\n  margin: 8px 0;\n  text-decoration: none;\n  color: #2b4055;\n  transition: text-shadow 350ms;\n  img {\n    position: absolute;\n    left: 300px;\n    display: inline-block;\n    opacity: 0;\n    transition: opacity 250ms 100ms;\n  }\n\n  :hover,\n  :focus-visible {\n    font-weight: 500;\n    text-shadow: 0 0 4px #2b405540;\n    img {\n      opacity: 1;\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { BsSearch } from 'react-icons/bs';\nimport { searchMovie } from 'api/moviesApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesWrapper, ListLink, Input, Button, Form } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return setMovies([]);\n\n    setLoading(true);\n    searchMovie(searchQuery)\n      .then(response => {\n        setMovies(response.results);\n        setLoading(false);\n      })\n      .catch(console.log);\n  }, [searchQuery]);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const query = e.currentTarget.elements.input.value;\n    if (query.trim() === '') toast.error('Enter your query!');\n    setSearchParams(query.trim() !== '' ? { query } : {});\n    e.currentTarget.reset();\n  };\n\n  return (\n    <MoviesWrapper>\n      <Form onSubmit={onSubmitForm}>\n        <Input type=\"text\" name=\"input\" />\n        <Button type=\"submit\"><BsSearch /></Button>\n      </Form>\n      {loading && <Loader />}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title, poster_path }) => (\n            <li key={id}>\n              <ListLink to={`${id}`} state={{ from: location }}>\n                <p>{title}</p>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n                  }\n                  alt={title}\n                  width={180}\n                />\n              </ListLink>\n            </li>\n          ))}\n        </ul>\n      )}\n      {movies.length === 0 && searchQuery !== '' && (\n        <p>\n          No movie was found for your query \"<span>{searchQuery}</span>\".\n        </p>\n      )}\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;"],"names":["axios","params","URLSearchParams","api_key","fetchTrending","response","data","searchMovie","query","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","MoviesWrapper","styled","Form","Input","Button","ListLink","Link","useState","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","then","results","catch","console","log","onSubmit","e","preventDefault","currentTarget","elements","input","value","trim","toast","reset","type","name","Loader","length","map","id","title","poster_path","to","state","from","src","alt","width"],"sourceRoot":""}