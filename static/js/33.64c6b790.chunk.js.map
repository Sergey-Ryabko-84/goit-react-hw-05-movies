{"version":3,"file":"static/js/33.64c6b790.chunk.js","mappings":"gTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,qCAKHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAAA,IAAA,8BAAiCC,IAD7B,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAA2CO,IADzC,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXG,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAgCT,IAD1B,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,6KCzBfO,EAAYC,EAAAA,GAAAA,KAAH,+DAKTC,EAAcD,EAAAA,GAAAA,IAAH,mHACE,SAAAE,GAAK,OAAIA,EAAMC,QAAV,IAKlBC,EAAkBJ,EAAAA,GAAAA,IAAH,iGAIfK,GAAWL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iaAoBRO,EAAeP,EAAAA,GAAAA,IAAH,2EAMZQ,EAAYR,EAAAA,GAAAA,IAAH,+PAcTS,EAAUT,EAAAA,GAAAA,IAAH,sT,SCmCpB,EA9EqB,WAAO,IAAD,IACzB,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAY7C,IAVAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,IACXnB,EAAAA,EAAAA,IAAgBoB,GACbO,MAAK,SAAA/B,GACJqB,EAASrB,GACTuB,GAAW,EACZ,IACAS,MAAMC,QAAQC,IAClB,GAAE,CAACV,IAECJ,EAAL,CACA,IAAQe,EACNf,EADMe,cAAeC,EACrBhB,EADqBgB,YAAaC,EAClCjB,EADkCiB,MAAOC,EACzClB,EADyCkB,aAAcC,EACvDnB,EADuDmB,SAAUC,EACjEpB,EADiEoB,OAGnE,OACE,UAAChC,EAAD,YACE,SAACE,EAAD,CACEE,SAAQ,0CAAqCuB,GAD/C,UAGE,UAACtB,EAAD,YACE,UAACC,EAAD,CAAU2B,GAAIf,EAAd,WACE,SAAC,MAAD,IADF,cAGCJ,IAAW,SAACoB,EAAA,EAAD,KACZ,UAAC1B,EAAD,YACE,gBACE2B,IACEP,EAAW,yCAC2BA,GAClC,6EAENQ,IAAKP,EACLQ,MAAO,OAET,UAAC5B,EAAD,YACE,wBAAKoB,KACL,wCAAgBS,KAAKC,MAAqB,GAAfT,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBACGC,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,4BAAgBA,EAAhB,MAAWD,EADD,aAMlB,UAAC/B,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASuB,GAAI,OAAQb,MAAO,CAAEC,KAAMH,GAApC,qBAIF,yBACE,SAAC,KAAD,CAASe,GAAI,UAAWb,MAAO,CAAEC,KAAMH,GAAvC,mCAQV,SAAC,EAAAyB,SAAD,CAAUC,UAAU,SAACV,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAvDY,CA2DnB,C","sources":["api/moviesApi.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90a449e7773f96eeaad80a5e660b8095';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}?${params}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits?${params}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews?${params}`);\n  return response.data;\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieMain = styled.main`\n  padding: 12px;\n  color: #2b4055d0;\n`;\n\nexport const BackdropImg = styled.div`\n  background-image: url(${props => props.backdrop});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const BackdropWrapper = styled.div`\n  background-image: radial-gradient(at center, #ffffff60, #ffffff 90%);\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  gap: 8px;\n  align-items: center;\n  padding: 8px;\n  margin-bottom: 12px;\n  text-decoration: none;\n  color: #2b4055;\n  font-weight: 500;\n  border-radius: 4px;\n  transition: color 250ms, background-color 250ms, text-shadow 250ms;\n\n  :hover,\n  :focus-visible {\n    color: #fff;\n    background-color: #2b4055b0;\n    box-shadow: #2b4055d0 0px 0px 4px;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 12px;\n  width: 800px;  \n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 800px;\n  padding: 12px;\n  border-radius: 12px;\n  background-image: radial-gradient(at top, #ffffffb0 70%, #ffffff00 95%);\n\n  p {\n    font-weight: 500;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 24px;\n\n  li {\n    padding: 2px;\n  }\n\n  a {\n    text-decoration: none;\n    color: #2b4055d0;\n    font-weight: 500;\n\n    :hover,\n    :focus-visible {\n      text-shadow: #2b4055d0 0px 0px 4px;\n    }\n  }\n`;","import { getMovieDetails } from 'api/moviesApi';\nimport { Suspense, useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  BackdropImg,\n  BackdropWrapper,\n  BackLink,\n  MovieMain,\n  MovieWrapper,\n  MovieInfo,\n  AddInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(response => {\n        setMovie(response);\n        setLoading(false);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!movie) return;\n  const { backdrop_path, poster_path, title, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <MovieMain>\n      <BackdropImg\n        backdrop={`https://image.tmdb.org/t/p/w1280${backdrop_path}`}\n      >\n        <BackdropWrapper>\n          <BackLink to={backLinkHref}>\n            <BiArrowBack /> Go back\n          </BackLink>\n          {loading && <Loader />}\n          <MovieWrapper>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n              }\n              alt={title}\n              width={320}\n            />\n            <MovieInfo>\n              <h2>{title}</h2>\n              <p>User Score: {Math.round(vote_average * 10)}%</p>\n              <h3>Owerview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {genres.map(({ id, name }) => (\n                  <span key={id}>{name} </span>\n                ))}\n              </p>\n            </MovieInfo>\n          </MovieWrapper>\n          <AddInfo>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink to={'cast'} state={{ from: backLinkHref }}>\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to={'reviews'} state={{ from: backLinkHref }}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </AddInfo>\n        </BackdropWrapper>\n      </BackdropImg>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </MovieMain>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","params","URLSearchParams","api_key","fetchTrending","response","data","searchMovie","query","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","MovieMain","styled","BackdropImg","props","backdrop","BackdropWrapper","BackLink","Link","MovieWrapper","MovieInfo","AddInfo","useState","movie","setMovie","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","console","log","backdrop_path","poster_path","title","vote_average","overview","genres","to","Loader","src","alt","width","Math","round","map","id","name","Suspense","fallback"],"sourceRoot":""}