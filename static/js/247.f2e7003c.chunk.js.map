{"version":3,"file":"static/js/247.f2e7003c.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,qCAKHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAAA,IAAA,8BAAiCC,IAD7B,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAA2CO,IADzC,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXG,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAgCT,IAD1B,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,sFCuB5B,UA9Ca,WACX,OAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,IAVAE,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXN,EAAAA,EAAAA,IAAgBO,GACbG,MAAK,SAAAhB,GACJU,EAAQV,EAASS,MACjBG,GAAW,EACZ,IACAK,MAAMC,QAAQC,IAClB,GAAE,CAACN,IAECJ,EACL,OAAoB,IAAhBA,EAAKW,QACA,yDAGP,gCACGT,IAAW,SAAC,IAAD,KACZ,wBACGF,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,yBACE,4BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,sCAENI,IAAKH,EACLI,MAAO,OAGT,uBAAIJ,KACJ,uCAAeC,SAbVH,EADD,QAqBjB,C","sources":["api/moviesApi.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90a449e7773f96eeaad80a5e660b8095';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}?${params}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits?${params}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews?${params}`);\n  return response.data;\n};","import { getMovieCredits } from \"api/moviesApi\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null)\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieCredits(movieId)\n      .then(response => {\n        setCast(response.cast);\n        setLoading(false);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!cast) return;\n  if (cast.length === 0)\n    return <p>No cast found for this movie</p>;\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <div>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://i.stack.imgur.com/WmvM0.png'                  \n                }\n                alt={name}\n                width={100}\n                // height={150}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;"],"names":["axios","params","URLSearchParams","api_key","fetchTrending","response","data","searchMovie","query","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","then","catch","console","log","length","map","id","profile_path","name","character","src","alt","width"],"sourceRoot":""}