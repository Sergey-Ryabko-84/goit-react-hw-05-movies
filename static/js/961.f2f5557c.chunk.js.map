{"version":3,"file":"static/js/961.f2f5557c.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAS,IAAIC,gBAAgB,CACjCC,QAFc,qCAKHC,EAAa,mCAAG,oGACJJ,EAAAA,EAAAA,IAAA,8BAAiCC,IAD7B,cACrBI,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAKbC,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,wBAA2BC,EAA3B,kBAA2CO,IADzC,cACnBH,EADmB,yBAElBA,EAASC,MAFS,2CAAH,sDAKXG,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAgCT,IAD1B,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAwCT,IADlC,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,8FC8C5B,UArEqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAY7C,IAVAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,IACXR,EAAAA,EAAAA,IAAgBS,GACbO,MAAK,SAAApB,GACJU,EAASV,GACTY,GAAW,EACZ,IACAS,MAAMC,QAAQC,IAClB,GAAE,CAACV,IAECJ,EAAL,CACA,IAAQe,EAAuDf,EAAvDe,YAAaC,EAA0ChB,EAA1CgB,MAAOC,EAAmCjB,EAAnCiB,aAAcC,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OAEpD,OACE,6BACE,SAAC,KAAD,CAAMC,GAAId,EAAV,SAAyB,eACxBJ,IAAW,SAAC,IAAD,KACZ,4BACE,gBACEmB,IACEN,EAAW,yCAC2BA,GAClC,6EAENO,IAAKN,EACLO,MAAO,OAET,4BACE,wBAAKP,KACL,wCAAgBQ,KAAKC,MAAqB,GAAfR,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBACGC,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,4BAAgBA,EAAhB,MAAWD,EADD,aAMlB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASP,GAAI,OAAQZ,MAAO,CAAEC,KAAMH,GAApC,qBAIF,yBACE,SAAC,KAAD,CAASc,GAAI,UAAWZ,MAAO,CAAEC,KAAMH,GAAvC,8BAMN,SAAC,EAAAuB,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,QA9CY,CAkDnB,C","sources":["api/moviesApi.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '90a449e7773f96eeaad80a5e660b8095';\nconst params = new URLSearchParams({\n  api_key: API_KEY,\n});\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?${params}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie?${params}&query=${query}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}?${params}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits?${params}`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews?${params}`);\n  return response.data;\n};","import { getMovieDetails } from 'api/moviesApi';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieDetails(movieId)\n      .then(response => {\n        setMovie(response);\n        setLoading(false);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!movie) return;\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <main>\n      <Link to={backLinkHref}>{'<- Go back'}</Link>\n      {loading && <Loader />}\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg'\n          }\n          alt={title}\n          width={320}\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>User Score: {Math.round(vote_average * 10)}%</p>\n          <h3>Owerview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {genres.map(({ id, name }) => (\n              <span key={id}>{name} </span>\n            ))}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink to={'cast'} state={{ from: backLinkHref }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to={'reviews'} state={{ from: backLinkHref }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","params","URLSearchParams","api_key","fetchTrending","response","data","searchMovie","query","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","useState","movie","setMovie","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","then","catch","console","log","poster_path","title","vote_average","overview","genres","to","src","alt","width","Math","round","map","id","name","Suspense","fallback"],"sourceRoot":""}